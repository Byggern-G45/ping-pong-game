
GccApplication14.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000015c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000108  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000015c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000018c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000070c  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000610  00000000  00000000  000008f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000211  00000000  00000000  00000f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000111c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000037e  00000000  00000000  00001150  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000047  00000000  00000000  000014ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001515  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 82 00 	jmp	0x104	; 0x104 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

#include <avr/io.h>


int main(void)
{
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
  88:	2a 97       	sbiw	r28, 0x0a	; 10
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	f8 94       	cli
  8e:	de bf       	out	0x3e, r29	; 62
  90:	0f be       	out	0x3f, r0	; 63
  92:	cd bf       	out	0x3d, r28	; 61
   volatile int8_t int8var = -200; // overflow - warning
  94:	88 e3       	ldi	r24, 0x38	; 56
  96:	89 83       	std	Y+1, r24	; 0x01
   volatile uint8_t uint8var = 100;
  98:	84 e6       	ldi	r24, 0x64	; 100
  9a:	8a 83       	std	Y+2, r24	; 0x02
   volatile int16_t int16var = -5000;;
  9c:	88 e7       	ldi	r24, 0x78	; 120
  9e:	9c ee       	ldi	r25, 0xEC	; 236
  a0:	9c 83       	std	Y+4, r25	; 0x04
  a2:	8b 83       	std	Y+3, r24	; 0x03
   volatile uint16_t uint16var = 2000;;
  a4:	80 ed       	ldi	r24, 0xD0	; 208
  a6:	97 e0       	ldi	r25, 0x07	; 7
  a8:	9e 83       	std	Y+6, r25	; 0x06
  aa:	8d 83       	std	Y+5, r24	; 0x05
   volatile int32_t int32var = 2000*5000; // overflow in expression- warning
  ac:	80 e8       	ldi	r24, 0x80	; 128
  ae:	96 e9       	ldi	r25, 0x96	; 150
  b0:	af ef       	ldi	r26, 0xFF	; 255
  b2:	bf ef       	ldi	r27, 0xFF	; 255
  b4:	8f 83       	std	Y+7, r24	; 0x07
  b6:	98 87       	std	Y+8, r25	; 0x08
  b8:	a9 87       	std	Y+9, r26	; 0x09
  ba:	ba 87       	std	Y+10, r27	; 0x0a
   int32var = 2000/5000*200;
  bc:	1f 82       	std	Y+7, r1	; 0x07
  be:	18 86       	std	Y+8, r1	; 0x08
  c0:	19 86       	std	Y+9, r1	; 0x09
  c2:	1a 86       	std	Y+10, r1	; 0x0a
   int16var = int8var * uint8var;
  c4:	29 81       	ldd	r18, Y+1	; 0x01
  c6:	3a 81       	ldd	r19, Y+2	; 0x02
  c8:	23 03       	mulsu	r18, r19
  ca:	c0 01       	movw	r24, r0
  cc:	11 24       	eor	r1, r1
  ce:	9c 83       	std	Y+4, r25	; 0x04
  d0:	8b 83       	std	Y+3, r24	; 0x03
   int8var++;
  d2:	89 81       	ldd	r24, Y+1	; 0x01
  d4:	8f 5f       	subi	r24, 0xFF	; 255
  d6:	89 83       	std	Y+1, r24	; 0x01
   uint16var++;
  d8:	8d 81       	ldd	r24, Y+5	; 0x05
  da:	9e 81       	ldd	r25, Y+6	; 0x06
  dc:	01 96       	adiw	r24, 0x01	; 1
  de:	9e 83       	std	Y+6, r25	; 0x06
  e0:	8d 83       	std	Y+5, r24	; 0x05
   int16var++;
  e2:	8b 81       	ldd	r24, Y+3	; 0x03
  e4:	9c 81       	ldd	r25, Y+4	; 0x04
  e6:	01 96       	adiw	r24, 0x01	; 1
  e8:	9c 83       	std	Y+4, r25	; 0x04
  ea:	8b 83       	std	Y+3, r24	; 0x03
   int32var++;
  ec:	8f 81       	ldd	r24, Y+7	; 0x07
  ee:	98 85       	ldd	r25, Y+8	; 0x08
  f0:	a9 85       	ldd	r26, Y+9	; 0x09
  f2:	ba 85       	ldd	r27, Y+10	; 0x0a
  f4:	01 96       	adiw	r24, 0x01	; 1
  f6:	a1 1d       	adc	r26, r1
  f8:	b1 1d       	adc	r27, r1
  fa:	8f 83       	std	Y+7, r24	; 0x07
  fc:	98 87       	std	Y+8, r25	; 0x08
  fe:	a9 87       	std	Y+9, r26	; 0x09
 100:	ba 87       	std	Y+10, r27	; 0x0a
 102:	ff cf       	rjmp	.-2      	; 0x102 <main+0x82>

00000104 <_exit>:
 104:	f8 94       	cli

00000106 <__stop_program>:
 106:	ff cf       	rjmp	.-2      	; 0x106 <__stop_program>
